[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "process-killer"
version = "1.0.0"
description = "macOS memory leak detector and killer with Docker support"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Emasoft"},
]
keywords = ["memory", "leak", "macos", "monitoring", "docker", "process"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "psutil>=5.9.0,<6.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.8.6",
    "mypy>=1.14.1",
    "types-psutil",
    "pre-commit>=4.2.0",
    "safety>=3.2.0",
]

[project.scripts]
process-killer = "process_killer:main"

[project.urls]
Homepage = "https://github.com/Emasoft/process_killer"
Issues = "https://github.com/Emasoft/process_killer/issues"
Repository = "https://github.com/Emasoft/process_killer"
Documentation = "https://github.com/Emasoft/process_killer#readme"
Changelog = "https://github.com/Emasoft/process_killer/blob/main/CHANGELOG.md"

[tool.ruff]
target-version = "py310"
line-length = 320
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "ARG001", # unused function argument
    "SIM105", # use contextlib.suppress
    "SIM102", # use single if statement
    "B007",  # unused loop variable
]

[tool.ruff.lint.isort]
known-first-party = ["process_killer"]


[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
